<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.computerdesign.whutHouseMgmt.dao.user.UserLoginReturnMapper">
  <resultMap id="BaseResultMap" type="com.computerdesign.whutHouseMgmt.bean.user.UserLoginReturn">
    <result column="No" jdbcType="VARCHAR" property="no" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="RoleId" jdbcType="BIGINT" property="roleId" />
    <result column="RoleName" jdbcType="VARCHAR" property="roleName" />
    <result column="Status" jdbcType="VARCHAR" property="status" />
    <result column="Token" jdbcType="VARCHAR" property="token" />
    <result column="LastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    No, Password, Name, RoleId, RoleName, Status, Token, LastLoginTime
  </sql>
  <select id="selectByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.user.UserLoginReturnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_au_all_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.user.UserLoginReturnExample">
    delete from view_au_all_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.computerdesign.whutHouseMgmt.bean.user.UserLoginReturn">
    insert into view_au_all_login (No, Password, Name, 
      RoleId, RoleName, Status, 
      Token, LastLoginTime)
    values (#{no,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.computerdesign.whutHouseMgmt.bean.user.UserLoginReturn">
    insert into view_au_all_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        No,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="roleId != null">
        RoleId,
      </if>
      <if test="roleName != null">
        RoleName,
      </if>
      <if test="status != null">
        Status,
      </if>
      <if test="token != null">
        Token,
      </if>
      <if test="lastLoginTime != null">
        LastLoginTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.user.UserLoginReturnExample" resultType="java.lang.Long">
    select count(*) from view_au_all_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update view_au_all_login
    <set>
      <if test="record.no != null">
        No = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        RoleId = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        RoleName = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        Status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        Token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        LastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update view_au_all_login
    set No = #{record.no,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      Name = #{record.name,jdbcType=VARCHAR},
      RoleId = #{record.roleId,jdbcType=BIGINT},
      RoleName = #{record.roleName,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=VARCHAR},
      Token = #{record.token,jdbcType=VARCHAR},
      LastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>