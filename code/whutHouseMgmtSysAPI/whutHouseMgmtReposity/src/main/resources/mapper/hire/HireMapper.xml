<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.computerdesign.whutHouseMgmt.dao.hire.HireMapper">
  <resultMap id="BaseResultMap" type="com.computerdesign.whutHouseMgmt.bean.hire.common.Hire">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="StaffId" jdbcType="INTEGER" property="staffId" />
    <result column="HouseId" jdbcType="INTEGER" property="houseId" />
    <result column="ApplyTime" jdbcType="DATE" property="applyTime" />
    <result column="Reason" jdbcType="VARCHAR" property="reason" />
    <result column="Phone" jdbcType="VARCHAR" property="phone" />
    <result column="HireState" jdbcType="VARCHAR" property="hireState" />
    <result column="TitleVal" jdbcType="DOUBLE" property="titleVal" />
    <result column="TotalVal" jdbcType="DOUBLE" property="totalVal" />
    <result column="TimeVal" jdbcType="DOUBLE" property="timeVal" />
    <result column="SpouseVal" jdbcType="DOUBLE" property="spouseVal" />
    <result column="OtherVal" jdbcType="DOUBLE" property="otherVal" />
    <result column="AcceptNote" jdbcType="VARCHAR" property="acceptNote" />
    <result column="AcceptState" jdbcType="VARCHAR" property="acceptState" />
    <result column="AcceptMan" jdbcType="VARCHAR" property="acceptMan" />
    <result column="AcceptTime" jdbcType="DATE" property="acceptTime" />
    <result column="AgreeNote" jdbcType="VARCHAR" property="agreeNote" />
    <result column="AgreeState" jdbcType="VARCHAR" property="agreeState" />
    <result column="AgreeMan" jdbcType="VARCHAR" property="agreeMan" />
    <result column="AgreeTime" jdbcType="DATE" property="agreeTime" />
    <result column="ApproveNote" jdbcType="VARCHAR" property="approveNote" />
    <result column="ApproveState" jdbcType="VARCHAR" property="approveState" />
    <result column="ApproveMan" jdbcType="VARCHAR" property="approveMan" />
    <result column="ApproveTime" jdbcType="DATE" property="approveTime" />
    <result column="IsOver" jdbcType="BIT" property="isOver" />
    <result column="FeedBack" jdbcType="VARCHAR" property="feedBack" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, StaffId, HouseId, ApplyTime, Reason, Phone, HireState, TitleVal, TotalVal, TimeVal, 
    SpouseVal, OtherVal, AcceptNote, AcceptState, AcceptMan, AcceptTime, AgreeNote, AgreeState, 
    AgreeMan, AgreeTime, ApproveNote, ApproveState, ApproveMan, ApproveTime, IsOver, 
    FeedBack, Email
  </sql>
  <select id="selectByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.HireExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Hs_Hire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Hs_Hire
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Hs_Hire
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.HireExample">
    delete from Hs_Hire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.Hire">
    insert into Hs_Hire (Id, StaffId, HouseId, 
      ApplyTime, Reason, Phone, 
      HireState, TitleVal, TotalVal, 
      TimeVal, SpouseVal, OtherVal, 
      AcceptNote, AcceptState, AcceptMan, 
      AcceptTime, AgreeNote, AgreeState, 
      AgreeMan, AgreeTime, ApproveNote, 
      ApproveState, ApproveMan, ApproveTime, 
      IsOver, FeedBack, Email
      )
    values (#{id,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{houseId,jdbcType=INTEGER}, 
      #{applyTime,jdbcType=DATE}, #{reason,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{hireState,jdbcType=VARCHAR}, #{titleVal,jdbcType=DOUBLE}, #{totalVal,jdbcType=DOUBLE}, 
      #{timeVal,jdbcType=DOUBLE}, #{spouseVal,jdbcType=DOUBLE}, #{otherVal,jdbcType=DOUBLE}, 
      #{acceptNote,jdbcType=VARCHAR}, #{acceptState,jdbcType=VARCHAR}, #{acceptMan,jdbcType=VARCHAR}, 
      #{acceptTime,jdbcType=DATE}, #{agreeNote,jdbcType=VARCHAR}, #{agreeState,jdbcType=VARCHAR}, 
      #{agreeMan,jdbcType=VARCHAR}, #{agreeTime,jdbcType=DATE}, #{approveNote,jdbcType=VARCHAR}, 
      #{approveState,jdbcType=VARCHAR}, #{approveMan,jdbcType=VARCHAR}, #{approveTime,jdbcType=DATE}, 
      #{isOver,jdbcType=BIT}, #{feedBack,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.Hire">
    insert into Hs_Hire
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="staffId != null">
        StaffId,
      </if>
      <if test="houseId != null">
        HouseId,
      </if>
      <if test="applyTime != null">
        ApplyTime,
      </if>
      <if test="reason != null">
        Reason,
      </if>
      <if test="phone != null">
        Phone,
      </if>
      <if test="hireState != null">
        HireState,
      </if>
      <if test="titleVal != null">
        TitleVal,
      </if>
      <if test="totalVal != null">
        TotalVal,
      </if>
      <if test="timeVal != null">
        TimeVal,
      </if>
      <if test="spouseVal != null">
        SpouseVal,
      </if>
      <if test="otherVal != null">
        OtherVal,
      </if>
      <if test="acceptNote != null">
        AcceptNote,
      </if>
      <if test="acceptState != null">
        AcceptState,
      </if>
      <if test="acceptMan != null">
        AcceptMan,
      </if>
      <if test="acceptTime != null">
        AcceptTime,
      </if>
      <if test="agreeNote != null">
        AgreeNote,
      </if>
      <if test="agreeState != null">
        AgreeState,
      </if>
      <if test="agreeMan != null">
        AgreeMan,
      </if>
      <if test="agreeTime != null">
        AgreeTime,
      </if>
      <if test="approveNote != null">
        ApproveNote,
      </if>
      <if test="approveState != null">
        ApproveState,
      </if>
      <if test="approveMan != null">
        ApproveMan,
      </if>
      <if test="approveTime != null">
        ApproveTime,
      </if>
      <if test="isOver != null">
        IsOver,
      </if>
      <if test="feedBack != null">
        FeedBack,
      </if>
      <if test="email != null">
        Email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=DATE},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="hireState != null">
        #{hireState,jdbcType=VARCHAR},
      </if>
      <if test="titleVal != null">
        #{titleVal,jdbcType=DOUBLE},
      </if>
      <if test="totalVal != null">
        #{totalVal,jdbcType=DOUBLE},
      </if>
      <if test="timeVal != null">
        #{timeVal,jdbcType=DOUBLE},
      </if>
      <if test="spouseVal != null">
        #{spouseVal,jdbcType=DOUBLE},
      </if>
      <if test="otherVal != null">
        #{otherVal,jdbcType=DOUBLE},
      </if>
      <if test="acceptNote != null">
        #{acceptNote,jdbcType=VARCHAR},
      </if>
      <if test="acceptState != null">
        #{acceptState,jdbcType=VARCHAR},
      </if>
      <if test="acceptMan != null">
        #{acceptMan,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null">
        #{acceptTime,jdbcType=DATE},
      </if>
      <if test="agreeNote != null">
        #{agreeNote,jdbcType=VARCHAR},
      </if>
      <if test="agreeState != null">
        #{agreeState,jdbcType=VARCHAR},
      </if>
      <if test="agreeMan != null">
        #{agreeMan,jdbcType=VARCHAR},
      </if>
      <if test="agreeTime != null">
        #{agreeTime,jdbcType=DATE},
      </if>
      <if test="approveNote != null">
        #{approveNote,jdbcType=VARCHAR},
      </if>
      <if test="approveState != null">
        #{approveState,jdbcType=VARCHAR},
      </if>
      <if test="approveMan != null">
        #{approveMan,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        #{approveTime,jdbcType=DATE},
      </if>
      <if test="isOver != null">
        #{isOver,jdbcType=BIT},
      </if>
      <if test="feedBack != null">
        #{feedBack,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.HireExample" resultType="java.lang.Long">
    select count(*) from Hs_Hire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Hs_Hire
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null">
        StaffId = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null">
        HouseId = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.applyTime != null">
        ApplyTime = #{record.applyTime,jdbcType=DATE},
      </if>
      <if test="record.reason != null">
        Reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        Phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.hireState != null">
        HireState = #{record.hireState,jdbcType=VARCHAR},
      </if>
      <if test="record.titleVal != null">
        TitleVal = #{record.titleVal,jdbcType=DOUBLE},
      </if>
      <if test="record.totalVal != null">
        TotalVal = #{record.totalVal,jdbcType=DOUBLE},
      </if>
      <if test="record.timeVal != null">
        TimeVal = #{record.timeVal,jdbcType=DOUBLE},
      </if>
      <if test="record.spouseVal != null">
        SpouseVal = #{record.spouseVal,jdbcType=DOUBLE},
      </if>
      <if test="record.otherVal != null">
        OtherVal = #{record.otherVal,jdbcType=DOUBLE},
      </if>
      <if test="record.acceptNote != null">
        AcceptNote = #{record.acceptNote,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptState != null">
        AcceptState = #{record.acceptState,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptMan != null">
        AcceptMan = #{record.acceptMan,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptTime != null">
        AcceptTime = #{record.acceptTime,jdbcType=DATE},
      </if>
      <if test="record.agreeNote != null">
        AgreeNote = #{record.agreeNote,jdbcType=VARCHAR},
      </if>
      <if test="record.agreeState != null">
        AgreeState = #{record.agreeState,jdbcType=VARCHAR},
      </if>
      <if test="record.agreeMan != null">
        AgreeMan = #{record.agreeMan,jdbcType=VARCHAR},
      </if>
      <if test="record.agreeTime != null">
        AgreeTime = #{record.agreeTime,jdbcType=DATE},
      </if>
      <if test="record.approveNote != null">
        ApproveNote = #{record.approveNote,jdbcType=VARCHAR},
      </if>
      <if test="record.approveState != null">
        ApproveState = #{record.approveState,jdbcType=VARCHAR},
      </if>
      <if test="record.approveMan != null">
        ApproveMan = #{record.approveMan,jdbcType=VARCHAR},
      </if>
      <if test="record.approveTime != null">
        ApproveTime = #{record.approveTime,jdbcType=DATE},
      </if>
      <if test="record.isOver != null">
        IsOver = #{record.isOver,jdbcType=BIT},
      </if>
      <if test="record.feedBack != null">
        FeedBack = #{record.feedBack,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Hs_Hire
    set Id = #{record.id,jdbcType=INTEGER},
      StaffId = #{record.staffId,jdbcType=INTEGER},
      HouseId = #{record.houseId,jdbcType=INTEGER},
      ApplyTime = #{record.applyTime,jdbcType=DATE},
      Reason = #{record.reason,jdbcType=VARCHAR},
      Phone = #{record.phone,jdbcType=VARCHAR},
      HireState = #{record.hireState,jdbcType=VARCHAR},
      TitleVal = #{record.titleVal,jdbcType=DOUBLE},
      TotalVal = #{record.totalVal,jdbcType=DOUBLE},
      TimeVal = #{record.timeVal,jdbcType=DOUBLE},
      SpouseVal = #{record.spouseVal,jdbcType=DOUBLE},
      OtherVal = #{record.otherVal,jdbcType=DOUBLE},
      AcceptNote = #{record.acceptNote,jdbcType=VARCHAR},
      AcceptState = #{record.acceptState,jdbcType=VARCHAR},
      AcceptMan = #{record.acceptMan,jdbcType=VARCHAR},
      AcceptTime = #{record.acceptTime,jdbcType=DATE},
      AgreeNote = #{record.agreeNote,jdbcType=VARCHAR},
      AgreeState = #{record.agreeState,jdbcType=VARCHAR},
      AgreeMan = #{record.agreeMan,jdbcType=VARCHAR},
      AgreeTime = #{record.agreeTime,jdbcType=DATE},
      ApproveNote = #{record.approveNote,jdbcType=VARCHAR},
      ApproveState = #{record.approveState,jdbcType=VARCHAR},
      ApproveMan = #{record.approveMan,jdbcType=VARCHAR},
      ApproveTime = #{record.approveTime,jdbcType=DATE},
      IsOver = #{record.isOver,jdbcType=BIT},
      FeedBack = #{record.feedBack,jdbcType=VARCHAR},
      Email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.Hire">
    update Hs_Hire
    <set>
      <if test="staffId != null">
        StaffId = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        HouseId = #{houseId,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        ApplyTime = #{applyTime,jdbcType=DATE},
      </if>
      <if test="reason != null">
        Reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        Phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="hireState != null">
        HireState = #{hireState,jdbcType=VARCHAR},
      </if>
      <if test="titleVal != null">
        TitleVal = #{titleVal,jdbcType=DOUBLE},
      </if>
      <if test="totalVal != null">
        TotalVal = #{totalVal,jdbcType=DOUBLE},
      </if>
      <if test="timeVal != null">
        TimeVal = #{timeVal,jdbcType=DOUBLE},
      </if>
      <if test="spouseVal != null">
        SpouseVal = #{spouseVal,jdbcType=DOUBLE},
      </if>
      <if test="otherVal != null">
        OtherVal = #{otherVal,jdbcType=DOUBLE},
      </if>
      <if test="acceptNote != null">
        AcceptNote = #{acceptNote,jdbcType=VARCHAR},
      </if>
      <if test="acceptState != null">
        AcceptState = #{acceptState,jdbcType=VARCHAR},
      </if>
      <if test="acceptMan != null">
        AcceptMan = #{acceptMan,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null">
        AcceptTime = #{acceptTime,jdbcType=DATE},
      </if>
      <if test="agreeNote != null">
        AgreeNote = #{agreeNote,jdbcType=VARCHAR},
      </if>
      <if test="agreeState != null">
        AgreeState = #{agreeState,jdbcType=VARCHAR},
      </if>
      <if test="agreeMan != null">
        AgreeMan = #{agreeMan,jdbcType=VARCHAR},
      </if>
      <if test="agreeTime != null">
        AgreeTime = #{agreeTime,jdbcType=DATE},
      </if>
      <if test="approveNote != null">
        ApproveNote = #{approveNote,jdbcType=VARCHAR},
      </if>
      <if test="approveState != null">
        ApproveState = #{approveState,jdbcType=VARCHAR},
      </if>
      <if test="approveMan != null">
        ApproveMan = #{approveMan,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        ApproveTime = #{approveTime,jdbcType=DATE},
      </if>
      <if test="isOver != null">
        IsOver = #{isOver,jdbcType=BIT},
      </if>
      <if test="feedBack != null">
        FeedBack = #{feedBack,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.Hire">
    update Hs_Hire
    set StaffId = #{staffId,jdbcType=INTEGER},
      HouseId = #{houseId,jdbcType=INTEGER},
      ApplyTime = #{applyTime,jdbcType=DATE},
      Reason = #{reason,jdbcType=VARCHAR},
      Phone = #{phone,jdbcType=VARCHAR},
      HireState = #{hireState,jdbcType=VARCHAR},
      TitleVal = #{titleVal,jdbcType=DOUBLE},
      TotalVal = #{totalVal,jdbcType=DOUBLE},
      TimeVal = #{timeVal,jdbcType=DOUBLE},
      SpouseVal = #{spouseVal,jdbcType=DOUBLE},
      OtherVal = #{otherVal,jdbcType=DOUBLE},
      AcceptNote = #{acceptNote,jdbcType=VARCHAR},
      AcceptState = #{acceptState,jdbcType=VARCHAR},
      AcceptMan = #{acceptMan,jdbcType=VARCHAR},
      AcceptTime = #{acceptTime,jdbcType=DATE},
      AgreeNote = #{agreeNote,jdbcType=VARCHAR},
      AgreeState = #{agreeState,jdbcType=VARCHAR},
      AgreeMan = #{agreeMan,jdbcType=VARCHAR},
      AgreeTime = #{agreeTime,jdbcType=DATE},
      ApproveNote = #{approveNote,jdbcType=VARCHAR},
      ApproveState = #{approveState,jdbcType=VARCHAR},
      ApproveMan = #{approveMan,jdbcType=VARCHAR},
      ApproveTime = #{approveTime,jdbcType=DATE},
      IsOver = #{isOver,jdbcType=BIT},
      FeedBack = #{feedBack,jdbcType=VARCHAR},
      Email = #{email,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>