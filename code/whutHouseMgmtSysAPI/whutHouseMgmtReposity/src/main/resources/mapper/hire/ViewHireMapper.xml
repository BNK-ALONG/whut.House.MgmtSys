<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.computerdesign.whutHouseMgmt.dao.hire.ViewHireMapper">
  <resultMap id="BaseResultMap" type="com.computerdesign.whutHouseMgmt.bean.hire.common.ViewHire">
    <result column="Id" jdbcType="INTEGER" property="id" />
    <result column="StaffId" jdbcType="INTEGER" property="staffId" />
    <result column="StaffNo" jdbcType="VARCHAR" property="staffNo" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Sex" jdbcType="VARCHAR" property="sex" />
    <result column="TitleName" jdbcType="VARCHAR" property="titleName" />
    <result column="SpouseTitleVal" jdbcType="INTEGER" property="spouseTitleVal" />
    <result column="PostName" jdbcType="VARCHAR" property="postName" />
    <result column="SpousePostVal" jdbcType="INTEGER" property="spousePostVal" />
    <result column="TypeName" jdbcType="VARCHAR" property="typeName" />
    <result column="DeptName" jdbcType="VARCHAR" property="deptName" />
    <result column="HouseId" jdbcType="INTEGER" property="houseId" />
    <result column="HouseNo" jdbcType="VARCHAR" property="houseNo" />
    <result column="HouseBuildArea" jdbcType="DOUBLE" property="houseBuildArea" />
    <result column="HouseUserArea" jdbcType="DOUBLE" property="houseUserArea" />
    <result column="HouseAddress" jdbcType="VARCHAR" property="houseAddress" />
    <result column="ApplyTime" jdbcType="DATE" property="applyTime" />
    <result column="Reason" jdbcType="VARCHAR" property="reason" />
    <result column="Phone" jdbcType="VARCHAR" property="phone" />
    <result column="HireState" jdbcType="VARCHAR" property="hireState" />
    <result column="TitleVal" jdbcType="DOUBLE" property="titleVal" />
    <result column="TotalVal" jdbcType="DOUBLE" property="totalVal" />
    <result column="TimeVal" jdbcType="DOUBLE" property="timeVal" />
    <result column="SpouseVal" jdbcType="DOUBLE" property="spouseVal" />
    <result column="OtherVal" jdbcType="DOUBLE" property="otherVal" />
    <result column="AcceptNote" jdbcType="VARCHAR" property="acceptNote" />
    <result column="AcceptState" jdbcType="VARCHAR" property="acceptState" />
    <result column="AcceptMan" jdbcType="VARCHAR" property="acceptMan" />
    <result column="AcceptTime" jdbcType="DATE" property="acceptTime" />
    <result column="AgreeNote" jdbcType="VARCHAR" property="agreeNote" />
    <result column="AgreeState" jdbcType="VARCHAR" property="agreeState" />
    <result column="AgreeMan" jdbcType="VARCHAR" property="agreeMan" />
    <result column="AgreeTime" jdbcType="DATE" property="agreeTime" />
    <result column="ApproveNote" jdbcType="VARCHAR" property="approveNote" />
    <result column="ApproveState" jdbcType="VARCHAR" property="approveState" />
    <result column="ApproveMan" jdbcType="VARCHAR" property="approveMan" />
    <result column="ApproveTime" jdbcType="DATE" property="approveTime" />
    <result column="IsOver" jdbcType="BIT" property="isOver" />
    <result column="FeedBack" jdbcType="VARCHAR" property="feedBack" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="HireFiles" jdbcType="VARCHAR" property="hireFiles" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, StaffId, StaffNo, Name, Sex, TitleName, SpouseTitleVal, PostName, SpousePostVal, 
    TypeName, DeptName, HouseId, HouseNo, HouseBuildArea, HouseUserArea, HouseAddress, 
    ApplyTime, Reason, Phone, HireState, TitleVal, TotalVal, TimeVal, SpouseVal, OtherVal, 
    AcceptNote, AcceptState, AcceptMan, AcceptTime, AgreeNote, AgreeState, AgreeMan, 
    AgreeTime, ApproveNote, ApproveState, ApproveMan, ApproveTime, IsOver, FeedBack, 
    Email, HireFiles
  </sql>
  <select id="selectByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.ViewHireExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_hs_hire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.ViewHireExample">
    delete from view_hs_hire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.ViewHire">
    insert into view_hs_hire (Id, StaffId, StaffNo, 
      Name, Sex, TitleName, 
      SpouseTitleVal, PostName, SpousePostVal, 
      TypeName, DeptName, HouseId, 
      HouseNo, HouseBuildArea, HouseUserArea, 
      HouseAddress, ApplyTime, Reason, 
      Phone, HireState, TitleVal, 
      TotalVal, TimeVal, SpouseVal, 
      OtherVal, AcceptNote, AcceptState, 
      AcceptMan, AcceptTime, AgreeNote, 
      AgreeState, AgreeMan, AgreeTime, 
      ApproveNote, ApproveState, ApproveMan, 
      ApproveTime, IsOver, FeedBack, 
      Email, HireFiles)
    values (#{id,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{staffNo,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{titleName,jdbcType=VARCHAR}, 
      #{spouseTitleVal,jdbcType=INTEGER}, #{postName,jdbcType=VARCHAR}, #{spousePostVal,jdbcType=INTEGER}, 
      #{typeName,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, #{houseId,jdbcType=INTEGER}, 
      #{houseNo,jdbcType=VARCHAR}, #{houseBuildArea,jdbcType=DOUBLE}, #{houseUserArea,jdbcType=DOUBLE}, 
      #{houseAddress,jdbcType=VARCHAR}, #{applyTime,jdbcType=DATE}, #{reason,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{hireState,jdbcType=VARCHAR}, #{titleVal,jdbcType=DOUBLE}, 
      #{totalVal,jdbcType=DOUBLE}, #{timeVal,jdbcType=DOUBLE}, #{spouseVal,jdbcType=DOUBLE}, 
      #{otherVal,jdbcType=DOUBLE}, #{acceptNote,jdbcType=VARCHAR}, #{acceptState,jdbcType=VARCHAR}, 
      #{acceptMan,jdbcType=VARCHAR}, #{acceptTime,jdbcType=DATE}, #{agreeNote,jdbcType=VARCHAR}, 
      #{agreeState,jdbcType=VARCHAR}, #{agreeMan,jdbcType=VARCHAR}, #{agreeTime,jdbcType=DATE}, 
      #{approveNote,jdbcType=VARCHAR}, #{approveState,jdbcType=VARCHAR}, #{approveMan,jdbcType=VARCHAR}, 
      #{approveTime,jdbcType=DATE}, #{isOver,jdbcType=BIT}, #{feedBack,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{hireFiles,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.ViewHire">
    insert into view_hs_hire
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="staffId != null">
        StaffId,
      </if>
      <if test="staffNo != null">
        StaffNo,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="sex != null">
        Sex,
      </if>
      <if test="titleName != null">
        TitleName,
      </if>
      <if test="spouseTitleVal != null">
        SpouseTitleVal,
      </if>
      <if test="postName != null">
        PostName,
      </if>
      <if test="spousePostVal != null">
        SpousePostVal,
      </if>
      <if test="typeName != null">
        TypeName,
      </if>
      <if test="deptName != null">
        DeptName,
      </if>
      <if test="houseId != null">
        HouseId,
      </if>
      <if test="houseNo != null">
        HouseNo,
      </if>
      <if test="houseBuildArea != null">
        HouseBuildArea,
      </if>
      <if test="houseUserArea != null">
        HouseUserArea,
      </if>
      <if test="houseAddress != null">
        HouseAddress,
      </if>
      <if test="applyTime != null">
        ApplyTime,
      </if>
      <if test="reason != null">
        Reason,
      </if>
      <if test="phone != null">
        Phone,
      </if>
      <if test="hireState != null">
        HireState,
      </if>
      <if test="titleVal != null">
        TitleVal,
      </if>
      <if test="totalVal != null">
        TotalVal,
      </if>
      <if test="timeVal != null">
        TimeVal,
      </if>
      <if test="spouseVal != null">
        SpouseVal,
      </if>
      <if test="otherVal != null">
        OtherVal,
      </if>
      <if test="acceptNote != null">
        AcceptNote,
      </if>
      <if test="acceptState != null">
        AcceptState,
      </if>
      <if test="acceptMan != null">
        AcceptMan,
      </if>
      <if test="acceptTime != null">
        AcceptTime,
      </if>
      <if test="agreeNote != null">
        AgreeNote,
      </if>
      <if test="agreeState != null">
        AgreeState,
      </if>
      <if test="agreeMan != null">
        AgreeMan,
      </if>
      <if test="agreeTime != null">
        AgreeTime,
      </if>
      <if test="approveNote != null">
        ApproveNote,
      </if>
      <if test="approveState != null">
        ApproveState,
      </if>
      <if test="approveMan != null">
        ApproveMan,
      </if>
      <if test="approveTime != null">
        ApproveTime,
      </if>
      <if test="isOver != null">
        IsOver,
      </if>
      <if test="feedBack != null">
        FeedBack,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="hireFiles != null">
        HireFiles,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffNo != null">
        #{staffNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="titleName != null">
        #{titleName,jdbcType=VARCHAR},
      </if>
      <if test="spouseTitleVal != null">
        #{spouseTitleVal,jdbcType=INTEGER},
      </if>
      <if test="postName != null">
        #{postName,jdbcType=VARCHAR},
      </if>
      <if test="spousePostVal != null">
        #{spousePostVal,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="houseNo != null">
        #{houseNo,jdbcType=VARCHAR},
      </if>
      <if test="houseBuildArea != null">
        #{houseBuildArea,jdbcType=DOUBLE},
      </if>
      <if test="houseUserArea != null">
        #{houseUserArea,jdbcType=DOUBLE},
      </if>
      <if test="houseAddress != null">
        #{houseAddress,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=DATE},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="hireState != null">
        #{hireState,jdbcType=VARCHAR},
      </if>
      <if test="titleVal != null">
        #{titleVal,jdbcType=DOUBLE},
      </if>
      <if test="totalVal != null">
        #{totalVal,jdbcType=DOUBLE},
      </if>
      <if test="timeVal != null">
        #{timeVal,jdbcType=DOUBLE},
      </if>
      <if test="spouseVal != null">
        #{spouseVal,jdbcType=DOUBLE},
      </if>
      <if test="otherVal != null">
        #{otherVal,jdbcType=DOUBLE},
      </if>
      <if test="acceptNote != null">
        #{acceptNote,jdbcType=VARCHAR},
      </if>
      <if test="acceptState != null">
        #{acceptState,jdbcType=VARCHAR},
      </if>
      <if test="acceptMan != null">
        #{acceptMan,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null">
        #{acceptTime,jdbcType=DATE},
      </if>
      <if test="agreeNote != null">
        #{agreeNote,jdbcType=VARCHAR},
      </if>
      <if test="agreeState != null">
        #{agreeState,jdbcType=VARCHAR},
      </if>
      <if test="agreeMan != null">
        #{agreeMan,jdbcType=VARCHAR},
      </if>
      <if test="agreeTime != null">
        #{agreeTime,jdbcType=DATE},
      </if>
      <if test="approveNote != null">
        #{approveNote,jdbcType=VARCHAR},
      </if>
      <if test="approveState != null">
        #{approveState,jdbcType=VARCHAR},
      </if>
      <if test="approveMan != null">
        #{approveMan,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        #{approveTime,jdbcType=DATE},
      </if>
      <if test="isOver != null">
        #{isOver,jdbcType=BIT},
      </if>
      <if test="feedBack != null">
        #{feedBack,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="hireFiles != null">
        #{hireFiles,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.common.ViewHireExample" resultType="java.lang.Long">
    select count(*) from view_hs_hire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update view_hs_hire
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null">
        StaffId = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.staffNo != null">
        StaffNo = #{record.staffNo,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        Sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.titleName != null">
        TitleName = #{record.titleName,jdbcType=VARCHAR},
      </if>
      <if test="record.spouseTitleVal != null">
        SpouseTitleVal = #{record.spouseTitleVal,jdbcType=INTEGER},
      </if>
      <if test="record.postName != null">
        PostName = #{record.postName,jdbcType=VARCHAR},
      </if>
      <if test="record.spousePostVal != null">
        SpousePostVal = #{record.spousePostVal,jdbcType=INTEGER},
      </if>
      <if test="record.typeName != null">
        TypeName = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptName != null">
        DeptName = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.houseId != null">
        HouseId = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.houseNo != null">
        HouseNo = #{record.houseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.houseBuildArea != null">
        HouseBuildArea = #{record.houseBuildArea,jdbcType=DOUBLE},
      </if>
      <if test="record.houseUserArea != null">
        HouseUserArea = #{record.houseUserArea,jdbcType=DOUBLE},
      </if>
      <if test="record.houseAddress != null">
        HouseAddress = #{record.houseAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        ApplyTime = #{record.applyTime,jdbcType=DATE},
      </if>
      <if test="record.reason != null">
        Reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        Phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.hireState != null">
        HireState = #{record.hireState,jdbcType=VARCHAR},
      </if>
      <if test="record.titleVal != null">
        TitleVal = #{record.titleVal,jdbcType=DOUBLE},
      </if>
      <if test="record.totalVal != null">
        TotalVal = #{record.totalVal,jdbcType=DOUBLE},
      </if>
      <if test="record.timeVal != null">
        TimeVal = #{record.timeVal,jdbcType=DOUBLE},
      </if>
      <if test="record.spouseVal != null">
        SpouseVal = #{record.spouseVal,jdbcType=DOUBLE},
      </if>
      <if test="record.otherVal != null">
        OtherVal = #{record.otherVal,jdbcType=DOUBLE},
      </if>
      <if test="record.acceptNote != null">
        AcceptNote = #{record.acceptNote,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptState != null">
        AcceptState = #{record.acceptState,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptMan != null">
        AcceptMan = #{record.acceptMan,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptTime != null">
        AcceptTime = #{record.acceptTime,jdbcType=DATE},
      </if>
      <if test="record.agreeNote != null">
        AgreeNote = #{record.agreeNote,jdbcType=VARCHAR},
      </if>
      <if test="record.agreeState != null">
        AgreeState = #{record.agreeState,jdbcType=VARCHAR},
      </if>
      <if test="record.agreeMan != null">
        AgreeMan = #{record.agreeMan,jdbcType=VARCHAR},
      </if>
      <if test="record.agreeTime != null">
        AgreeTime = #{record.agreeTime,jdbcType=DATE},
      </if>
      <if test="record.approveNote != null">
        ApproveNote = #{record.approveNote,jdbcType=VARCHAR},
      </if>
      <if test="record.approveState != null">
        ApproveState = #{record.approveState,jdbcType=VARCHAR},
      </if>
      <if test="record.approveMan != null">
        ApproveMan = #{record.approveMan,jdbcType=VARCHAR},
      </if>
      <if test="record.approveTime != null">
        ApproveTime = #{record.approveTime,jdbcType=DATE},
      </if>
      <if test="record.isOver != null">
        IsOver = #{record.isOver,jdbcType=BIT},
      </if>
      <if test="record.feedBack != null">
        FeedBack = #{record.feedBack,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.hireFiles != null">
        HireFiles = #{record.hireFiles,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update view_hs_hire
    set Id = #{record.id,jdbcType=INTEGER},
      StaffId = #{record.staffId,jdbcType=INTEGER},
      StaffNo = #{record.staffNo,jdbcType=VARCHAR},
      Name = #{record.name,jdbcType=VARCHAR},
      Sex = #{record.sex,jdbcType=VARCHAR},
      TitleName = #{record.titleName,jdbcType=VARCHAR},
      SpouseTitleVal = #{record.spouseTitleVal,jdbcType=INTEGER},
      PostName = #{record.postName,jdbcType=VARCHAR},
      SpousePostVal = #{record.spousePostVal,jdbcType=INTEGER},
      TypeName = #{record.typeName,jdbcType=VARCHAR},
      DeptName = #{record.deptName,jdbcType=VARCHAR},
      HouseId = #{record.houseId,jdbcType=INTEGER},
      HouseNo = #{record.houseNo,jdbcType=VARCHAR},
      HouseBuildArea = #{record.houseBuildArea,jdbcType=DOUBLE},
      HouseUserArea = #{record.houseUserArea,jdbcType=DOUBLE},
      HouseAddress = #{record.houseAddress,jdbcType=VARCHAR},
      ApplyTime = #{record.applyTime,jdbcType=DATE},
      Reason = #{record.reason,jdbcType=VARCHAR},
      Phone = #{record.phone,jdbcType=VARCHAR},
      HireState = #{record.hireState,jdbcType=VARCHAR},
      TitleVal = #{record.titleVal,jdbcType=DOUBLE},
      TotalVal = #{record.totalVal,jdbcType=DOUBLE},
      TimeVal = #{record.timeVal,jdbcType=DOUBLE},
      SpouseVal = #{record.spouseVal,jdbcType=DOUBLE},
      OtherVal = #{record.otherVal,jdbcType=DOUBLE},
      AcceptNote = #{record.acceptNote,jdbcType=VARCHAR},
      AcceptState = #{record.acceptState,jdbcType=VARCHAR},
      AcceptMan = #{record.acceptMan,jdbcType=VARCHAR},
      AcceptTime = #{record.acceptTime,jdbcType=DATE},
      AgreeNote = #{record.agreeNote,jdbcType=VARCHAR},
      AgreeState = #{record.agreeState,jdbcType=VARCHAR},
      AgreeMan = #{record.agreeMan,jdbcType=VARCHAR},
      AgreeTime = #{record.agreeTime,jdbcType=DATE},
      ApproveNote = #{record.approveNote,jdbcType=VARCHAR},
      ApproveState = #{record.approveState,jdbcType=VARCHAR},
      ApproveMan = #{record.approveMan,jdbcType=VARCHAR},
      ApproveTime = #{record.approveTime,jdbcType=DATE},
      IsOver = #{record.isOver,jdbcType=BIT},
      FeedBack = #{record.feedBack,jdbcType=VARCHAR},
      Email = #{record.email,jdbcType=VARCHAR},
      HireFiles = #{record.hireFiles,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>