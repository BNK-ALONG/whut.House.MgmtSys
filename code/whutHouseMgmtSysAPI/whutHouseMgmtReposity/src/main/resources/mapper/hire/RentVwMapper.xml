<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.computerdesign.whutHouseMgmt.dao.hire.RentVwMapper">
  <resultMap id="BaseResultMap" type="com.computerdesign.whutHouseMgmt.bean.hire.rentgenerate.RentVw">
    <result column="StaffId" jdbcType="INTEGER" property="staffId" />
    <result column="HouseId" jdbcType="INTEGER" property="houseId" />
    <result column="StaffName" jdbcType="VARCHAR" property="staffName" />
    <result column="Address" jdbcType="VARCHAR" property="address" />
    <result column="StaffNo" jdbcType="VARCHAR" property="staffNo" />
    <result column="HouseNo" jdbcType="VARCHAR" property="houseNo" />
    <result column="ExpireTime" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="BookTime" jdbcType="TIMESTAMP" property="bookTime" />
    <result column="RentBeginTime" jdbcType="TIMESTAMP" property="rentBeginTime" />
    <result column="RentEndTime" jdbcType="TIMESTAMP" property="rentEndTime" />
    <result column="RentDiscountRate" jdbcType="VARCHAR" property="rentDiscountRate" />
    <result column="RentInitMoney" jdbcType="DOUBLE" property="rentInitMoney" />
    <result column="RentIsGet" jdbcType="TINYINT" property="rentIsGet" />
    <result column="RentId" jdbcType="INTEGER" property="rentId" />
    <result column="RentMoney" jdbcType="DOUBLE" property="rentMoney" />
    <result column="RentType" jdbcType="VARCHAR" property="rentType" />
    <result column="ResidentId" jdbcType="INTEGER" property="residentId" />
    <result column="EmployType" jdbcType="VARCHAR" property="employType" />
    <result column="StaffDeptId" jdbcType="INTEGER" property="staffDeptId" />
    <result column="StaffDeptName" jdbcType="VARCHAR" property="staffDeptName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    StaffId, HouseId, StaffName, Address, StaffNo, HouseNo, ExpireTime, BookTime, RentBeginTime, 
    RentEndTime, RentDiscountRate, RentInitMoney, RentIsGet, RentId, RentMoney, RentType, 
    ResidentId, EmployType, StaffDeptId, StaffDeptName
  </sql>
  <select id="selectByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.rentgenerate.RentVwExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_hs_rent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.rentgenerate.RentVwExample">
    delete from view_hs_rent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.rentgenerate.RentVw">
    insert into view_hs_rent (StaffId, HouseId, StaffName, 
      Address, StaffNo, HouseNo, 
      ExpireTime, BookTime, RentBeginTime, 
      RentEndTime, RentDiscountRate, RentInitMoney, 
      RentIsGet, RentId, RentMoney, 
      RentType, ResidentId, EmployType, 
      StaffDeptId, StaffDeptName)
    values (#{staffId,jdbcType=INTEGER}, #{houseId,jdbcType=INTEGER}, #{staffName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{staffNo,jdbcType=VARCHAR}, #{houseNo,jdbcType=VARCHAR}, 
      #{expireTime,jdbcType=TIMESTAMP}, #{bookTime,jdbcType=TIMESTAMP}, #{rentBeginTime,jdbcType=TIMESTAMP}, 
      #{rentEndTime,jdbcType=TIMESTAMP}, #{rentDiscountRate,jdbcType=VARCHAR}, #{rentInitMoney,jdbcType=DOUBLE}, 
      #{rentIsGet,jdbcType=TINYINT}, #{rentId,jdbcType=INTEGER}, #{rentMoney,jdbcType=DOUBLE}, 
      #{rentType,jdbcType=VARCHAR}, #{residentId,jdbcType=INTEGER}, #{employType,jdbcType=VARCHAR}, 
      #{staffDeptId,jdbcType=INTEGER}, #{staffDeptName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.rentgenerate.RentVw">
    insert into view_hs_rent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffId != null">
        StaffId,
      </if>
      <if test="houseId != null">
        HouseId,
      </if>
      <if test="staffName != null">
        StaffName,
      </if>
      <if test="address != null">
        Address,
      </if>
      <if test="staffNo != null">
        StaffNo,
      </if>
      <if test="houseNo != null">
        HouseNo,
      </if>
      <if test="expireTime != null">
        ExpireTime,
      </if>
      <if test="bookTime != null">
        BookTime,
      </if>
      <if test="rentBeginTime != null">
        RentBeginTime,
      </if>
      <if test="rentEndTime != null">
        RentEndTime,
      </if>
      <if test="rentDiscountRate != null">
        RentDiscountRate,
      </if>
      <if test="rentInitMoney != null">
        RentInitMoney,
      </if>
      <if test="rentIsGet != null">
        RentIsGet,
      </if>
      <if test="rentId != null">
        RentId,
      </if>
      <if test="rentMoney != null">
        RentMoney,
      </if>
      <if test="rentType != null">
        RentType,
      </if>
      <if test="residentId != null">
        ResidentId,
      </if>
      <if test="employType != null">
        EmployType,
      </if>
      <if test="staffDeptId != null">
        StaffDeptId,
      </if>
      <if test="staffDeptName != null">
        StaffDeptName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null">
        #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="staffNo != null">
        #{staffNo,jdbcType=VARCHAR},
      </if>
      <if test="houseNo != null">
        #{houseNo,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookTime != null">
        #{bookTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rentBeginTime != null">
        #{rentBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rentEndTime != null">
        #{rentEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rentDiscountRate != null">
        #{rentDiscountRate,jdbcType=VARCHAR},
      </if>
      <if test="rentInitMoney != null">
        #{rentInitMoney,jdbcType=DOUBLE},
      </if>
      <if test="rentIsGet != null">
        #{rentIsGet,jdbcType=TINYINT},
      </if>
      <if test="rentId != null">
        #{rentId,jdbcType=INTEGER},
      </if>
      <if test="rentMoney != null">
        #{rentMoney,jdbcType=DOUBLE},
      </if>
      <if test="rentType != null">
        #{rentType,jdbcType=VARCHAR},
      </if>
      <if test="residentId != null">
        #{residentId,jdbcType=INTEGER},
      </if>
      <if test="employType != null">
        #{employType,jdbcType=VARCHAR},
      </if>
      <if test="staffDeptId != null">
        #{staffDeptId,jdbcType=INTEGER},
      </if>
      <if test="staffDeptName != null">
        #{staffDeptName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.computerdesign.whutHouseMgmt.bean.hire.rentgenerate.RentVwExample" resultType="java.lang.Long">
    select count(*) from view_hs_rent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update view_hs_rent
    <set>
      <if test="record.staffId != null">
        StaffId = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null">
        HouseId = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.staffName != null">
        StaffName = #{record.staffName,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        Address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.staffNo != null">
        StaffNo = #{record.staffNo,jdbcType=VARCHAR},
      </if>
      <if test="record.houseNo != null">
        HouseNo = #{record.houseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.expireTime != null">
        ExpireTime = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookTime != null">
        BookTime = #{record.bookTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rentBeginTime != null">
        RentBeginTime = #{record.rentBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rentEndTime != null">
        RentEndTime = #{record.rentEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rentDiscountRate != null">
        RentDiscountRate = #{record.rentDiscountRate,jdbcType=VARCHAR},
      </if>
      <if test="record.rentInitMoney != null">
        RentInitMoney = #{record.rentInitMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.rentIsGet != null">
        RentIsGet = #{record.rentIsGet,jdbcType=TINYINT},
      </if>
      <if test="record.rentId != null">
        RentId = #{record.rentId,jdbcType=INTEGER},
      </if>
      <if test="record.rentMoney != null">
        RentMoney = #{record.rentMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.rentType != null">
        RentType = #{record.rentType,jdbcType=VARCHAR},
      </if>
      <if test="record.residentId != null">
        ResidentId = #{record.residentId,jdbcType=INTEGER},
      </if>
      <if test="record.employType != null">
        EmployType = #{record.employType,jdbcType=VARCHAR},
      </if>
      <if test="record.staffDeptId != null">
        StaffDeptId = #{record.staffDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.staffDeptName != null">
        StaffDeptName = #{record.staffDeptName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update view_hs_rent
    set StaffId = #{record.staffId,jdbcType=INTEGER},
      HouseId = #{record.houseId,jdbcType=INTEGER},
      StaffName = #{record.staffName,jdbcType=VARCHAR},
      Address = #{record.address,jdbcType=VARCHAR},
      StaffNo = #{record.staffNo,jdbcType=VARCHAR},
      HouseNo = #{record.houseNo,jdbcType=VARCHAR},
      ExpireTime = #{record.expireTime,jdbcType=TIMESTAMP},
      BookTime = #{record.bookTime,jdbcType=TIMESTAMP},
      RentBeginTime = #{record.rentBeginTime,jdbcType=TIMESTAMP},
      RentEndTime = #{record.rentEndTime,jdbcType=TIMESTAMP},
      RentDiscountRate = #{record.rentDiscountRate,jdbcType=VARCHAR},
      RentInitMoney = #{record.rentInitMoney,jdbcType=DOUBLE},
      RentIsGet = #{record.rentIsGet,jdbcType=TINYINT},
      RentId = #{record.rentId,jdbcType=INTEGER},
      RentMoney = #{record.rentMoney,jdbcType=DOUBLE},
      RentType = #{record.rentType,jdbcType=VARCHAR},
      ResidentId = #{record.residentId,jdbcType=INTEGER},
      EmployType = #{record.employType,jdbcType=VARCHAR},
      StaffDeptId = #{record.staffDeptId,jdbcType=INTEGER},
      StaffDeptName = #{record.staffDeptName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>